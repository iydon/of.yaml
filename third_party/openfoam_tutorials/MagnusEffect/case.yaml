---
openfoam: [2.3.x]
version: 0.11.0
order:
    - meta
    - foam
    - static
    - other
---
"0":
    U:
        FoamFile: &FoamFile
            version: 2.0
            format: ascii
            class: volVectorField
            object: U
        dimensions: "[0 1 -1 0 0 0 0]"
        internalField: uniform (10 0 0)
        boundaryField:
            frontAndBack:
                type: empty
            domain_boundary:
                type: freestream
                freestreamValue: uniform (10 0 0)
            cylinder:
                type: rotatingWallVelocity
                origin: ( 0 0 0 )
                axis: ( 0 0 1 )
                omega: -200
    epsilon:
        FoamFile:
            class: volScalarField
            object: epsilon
            <<: *FoamFile
        dimensions: "[0 2 -3 0 0 0 0]"
        internalField: uniform 0.000765
        boundaryField:
            frontAndBack:
                type: empty
            domain_boundary:
                type: freestream
                freestreamValue: uniform 0.000765
            cylinder:
                type: epsilonWallFunction
                value: uniform 0
    k:
        FoamFile:
            class: volScalarField
            object: k
            <<: *FoamFile
        dimensions: "[0 2 -2 0 0 0 0]"
        internalField: uniform 0.00325
        boundaryField:
            frontAndBack:
                type: empty
            domain_boundary:
                type: freestream
                freestreamValue: uniform 0.00325
            cylinder:
                type: kqRWallFunction
                value: uniform 0
    nuTilda:
        FoamFile:
            class: volScalarField
            object: nuTilda
            <<: *FoamFile
        dimensions: "[0 2 -1 0 0 0 0]"
        internalField: uniform 0
        boundaryField:
            frontAndBack:
                type: empty
            domain_boundary:
                type: freestream
                freestreamValue: uniform 0
            cylinder:
                type: zeroGradient
    nut:
        FoamFile:
            class: volScalarField
            object: nut
            <<: *FoamFile
        dimensions: "[0 2 -1 0 0 0 0]"
        internalField: uniform 0
        boundaryField:
            frontAndBack:
                type: empty
            domain_boundary:
                type: freestream
                freestreamValue: uniform 0.14
            cylinder:
                type: nutkWallFunction
                value: uniform 0
    p:
        FoamFile:
            class: volScalarField
            object: p
            <<: *FoamFile
        dimensions: "[0 2 -2 0 0 0 0]"
        internalField: uniform 0
        boundaryField:
            frontAndBack:
                type: empty
            domain_boundary:
                type: zeroGradient
            cylinder:
                type: zeroGradient
constant:
    RASProperties:
        FoamFile:
            class: dictionary
            object: RASProperties
            <<: *FoamFile
        RASModel: kEpsilon
        turbulence: on
        printCoeffs: on
    RASProperties~:
        FoamFile:
            class: dictionary
            object: RASProperties
            <<: *FoamFile
        RASModel: SpalartAllmaras
        turbulence: on
        printCoeffs: on
    transportProperties:
        FoamFile:
            class: dictionary
            object: transportProperties
            <<: *FoamFile
        transportModel: Newtonian
        nu: nu [ 0 2 -1 0 0 0 0 ] 1e-05
        CrossPowerLawCoeffs:
            nu0: nu0 [ 0 2 -1 0 0 0 0 ] 1e-06
            nuInf: nuInf [ 0 2 -1 0 0 0 0 ] 1e-06
            m: m [ 0 0 1 0 0 0 0 ] 1
            n: n [ 0 0 0 0 0 0 0 ] 1
        BirdCarreauCoeffs:
            nu0: nu0 [ 0 2 -1 0 0 0 0 ] 1e-06
            nuInf: nuInf [ 0 2 -1 0 0 0 0 ] 1e-06
            k: k [ 0 0 1 0 0 0 0 ] 0
            n: n [ 0 0 0 0 0 0 0 ] 1
    turbulenceProperties:
        FoamFile:
            class: dictionary
            object: turbulenceProperties
            <<: *FoamFile
        simulationType: RASModel
system:
    changeDictionaryDict:
        FoamFile:
            class: dictionary
            object: changeDictionaryDict
            <<: *FoamFile
        dictionaryReplacement:
            boundary:
                frontAndBack:
                    type: empty
                    physicalType: empty
                cylinder:
                    type: wall
                    physicalType: wall
    controlDict:
        FoamFile:
            class: dictionary
            object: controlDict
            <<: *FoamFile
        applicationClass: pimpleFoam
        startFrom: latestTime
        startTime: 0
        endTime: 1
        stopAt: endTime
        deltaT: 1
        writeControl: adjustableRunTime
        writeInterval: 0.01
        cycleWrite: 0
        writeFormat: ascii
        writePrecision: 6
        writeCompression: uncompressed
        timeFormat: general
        timePrecision: 6
        runTimeModifiable: yes
        adjustTimeStep: yes
        maxCo: 2
        maxDeltaT: 1
    fvSchemes:
        FoamFile:
            class: dictionary
            object: fvSchemes
            <<: *FoamFile
        ddtSchemes:
            default: Euler
        gradSchemes:
            default: Gauss linear
        divSchemes:
            default: Gauss upwind  # Gauss linearUpwind leastSquares
            # div(phi, U): Gauss linearUpwind grad(U)
            # div(phi, nuTilda): limitedLinear 1
            # div(phi, k): limitedLinear 1
            # div(phi, omega): limitedLinear 1
            div((nuEff*dev(T(grad(U))))): Gauss linear
        laplacianSchemes:
            default: Gauss linear limited 1
        interpolationSchemes:
            default: linear
        snGradSchemes:
            default: corrected
        fluxRequired:
            default: no
            pcorr: ''
            p: ''
    fvSolution:
        FoamFile:
            class: dictionary
            object: fvSolution
            <<: *FoamFile
        # The following variables must have line numbers of 17-18.
        myPTolerance: 1e-2
        myUTolerance: 1e-5
        myTurbTolerance: 1e-6
        myRelaxation: 1
        solvers:
            (p|pFinal|pcorr):
                solver: GAMG
                mergeLevels: 1
                smoother: GaussSeidel
                agglomerator: faceAreaPair
                nCellsInCoarsestLevel: 1500
                tolerance: $myPTolerance
                relTol: 0.1
            (k|kFinal|omega|omegaFinal|epsilon|epsilonFinal|nuTilda|nuTildaFinal):
                solver: smoothSolver  # PBiCG
                smoother: GaussSeidel
                # preconditioner: DILU
                tolerance: $myTurbTolerance
                relTol: 0.1
            (U|UFinal):
                solver: smoothSolver  # PBiCG
                smoother: GaussSeidel
                # preconditioner: DILU
                tolerance: $myUTolerance
                relTol: 0.1
        PIMPLE:
            correctPhi: no
            nOuterCorrectors: 1
            nCorrectors: 3
            nNonOrthogonalCorrectors: 1
            pRefCell: 0
            pRefValue: 0
        relaxationFactors:
            fields:
                p: $myRelaxation
            equations:
                k: $myRelaxation
                U: $myRelaxation
                omega: $myRelaxation
                epsilon: $myRelaxation
                nuTilda: $myRelaxation
---
-
    name: mesh/main.geo
    type: [embed, text]
    permission: null
    data: |
        //Inputs (units are metric)
        cylinder_radius = 0.1;
        boundarylayer_height = 0.2*cylinder_radius;
        boundarylayer_cells = 10;
        boundarylayer_progression = 1.1;
        surface_gridsize = 0.1*cylinder_radius;

        domain_radius = 20*cylinder_radius;
        domain_gridsize = 0.1*domain_radius;
        cell_depth = cylinder_radius;

        Point(1) = {0,0,0};

        Point(2) = {cylinder_radius,0,0};
        Point(3) = {0,cylinder_radius,0};
        Point(4) = {-cylinder_radius,0,0};
        Point(5) = {0,-cylinder_radius,0};

        Point(6) = {cylinder_radius+boundarylayer_height,0,0};
        Point(7) = {0,cylinder_radius+boundarylayer_height,0};
        Point(8) = {-(cylinder_radius+boundarylayer_height),0,0};
        Point(9) = {0,-(cylinder_radius+boundarylayer_height),0};

        Circle(10) = {2,1,3};
        Circle(11) = {3,1,4};
        Circle(12) = {4,1,5};
        Circle(13) = {5,1,2};

        Circle(14) = {6,1,7};
        Circle(15) = {7,1,8};
        Circle(16) = {8,1,9};
        Circle(17) = {9,1,6};

        Line(18) = {2,6};
        Line(19) = {3,7};
        Line(20) = {4,8};
        Line(21) = {5,9};

        Line Loop(22) = {18,14,-19,-10};
        Line Loop(23) = {19,15,-20,-11};
        Line Loop(24) = {20,16,-21,-12};
        Line Loop(25) = {21,17,-18,-13};

        Plane Surface(26) = 22;
        Plane Surface(27) = 23;
        Plane Surface(28) = 24;
        Plane Surface(29) = 25;

        Transfinite Line{10:17} = cylinder_radius*2*Pi/surface_gridsize;
        Transfinite Line{18,19,20,21} = boundarylayer_cells Using Progression boundarylayer_progression;
        Transfinite Surface{26,27,28,29};

        Recombine Surface{26};
        Recombine Surface{27};
        Recombine Surface{28};
        Recombine Surface{29};

        Line Loop(30) = {14:17};

        Point(31) = {domain_radius,0,0,domain_gridsize};
        Point(32) = {0,domain_radius,0,domain_gridsize};
        Point(33) = {-domain_radius,0,0,domain_gridsize};
        Point(34) = {0,-domain_radius,0,domain_gridsize};

        Circle(35) = {31,1,32};
        Circle(36) = {32,1,33};
        Circle(37) = {33,1,34};
        Circle(38) = {34,1,31};

        Line Loop(39) = {35:38};

        Plane Surface(40) = {39,30};

        new_entities1[] =
        Extrude{0,0,cell_depth}
        {
            Surface{26};
            Layers{1};
            Recombine;
        };
        new_entities2[] =
        Extrude{0,0,cell_depth}
        {
            Surface{27};
            Layers{1};
            Recombine;
        };
        new_entities3[] =
        Extrude{0,0,cell_depth}
        {
            Surface{28};
            Layers{1};
            Recombine;
        };
        new_entities4[] =
        Extrude{0,0,cell_depth}
        {
            Surface{29};
            Layers{1};
            Recombine;
        };
        new_entities5[] =
        Extrude{0,0,cell_depth}
        {
            Surface{40};
            Layers{1};
            Recombine;
        };

        Physical Surface("cylinder") = {new_entities1[5],new_entities2[5],new_entities3[5],new_entities4[5]};
        Physical Surface("domain_boundary") = {new_entities5[{2:5}]};
        Physical Surface("frontAndBack") = {26:29,40,new_entities1[0],new_entities2[0],new_entities3[0],new_entities4[0],new_entities5[0]};

        Physical Volume(1000) = {new_entities1[1],new_entities2[1],new_entities3[1],new_entities4[1],new_entities5[1]};
---
pipeline:
    - gmsh mesh/main.geo -3 -o test.msh
    - gmshToFoam test.msh
    - changeDictionary
    - __app__
