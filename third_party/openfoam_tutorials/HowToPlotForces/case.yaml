---
openfoam: [2.3.x]
version: 0.11.0
order:
    - meta
    - foam
    - static
    - other
---
"0":
    U:
        FoamFile: &FoamFile
            version: 2.0
            format: ascii
            class: volVectorField
            object: U
        dimensions: "[0 1 -1 0 0 0 0]"
        internalField: uniform (25.75 3.62 0)
        boundaryField:
            inlet:
                type: freestream
                freestreamValue: uniform (25.75 3.62 0)
            outlet:
                type: freestream
                freestreamValue: uniform (25.75 3.62 0)
            walls:
                type: fixedValue
                value: uniform (0 0 0)
            frontAndBack:
                type: empty
    nuTilda:
        FoamFile:
            class: volScalarField
            object: nuTilda
            <<: *FoamFile
        dimensions: "[0 2 -1 0 0 0 0]"
        internalField: uniform 0.14
        boundaryField:
            inlet:
                type: freestream
                freestreamValue: uniform 0.14
            outlet:
                type: freestream
                freestreamValue: uniform 0.14
            walls:
                type: fixedValue
                value: uniform 0
            frontAndBack:
                type: empty
    nut:
        FoamFile:
            class: volScalarField
            object: nut
            <<: *FoamFile
        dimensions: "[0 2 -1 0 0 0 0]"
        internalField: uniform 0.14
        boundaryField:
            inlet:
                type: freestream
                freestreamValue: uniform 0.14
            outlet:
                type: freestream
                freestreamValue: uniform 0.14
            walls:
                type: nutUSpaldingWallFunction
                value: uniform 0
            frontAndBack:
                type: empty
    p:
        FoamFile:
            class: volScalarField
            object: p
            <<: *FoamFile
        dimensions: "[0 2 -2 0 0 0 0]"
        internalField: uniform 0
        boundaryField:
            inlet:
                type: freestreamPressure
            outlet:
                type: freestreamPressure
            walls:
                type: zeroGradient
            frontAndBack:
                type: empty
constant:
    RASProperties:
        FoamFile:
            class: dictionary
            object: RASProperties
            <<: *FoamFile
        RASModel: SpalartAllmaras
        turbulence: on
        printCoeffs: on
    transportProperties:
        FoamFile:
            class: dictionary
            object: transportProperties
            <<: *FoamFile
        transportModel: Newtonian
        rho: rho [ 1 -3 0 0 0 0 0 ] 1
        nu: nu [ 0 2 -1 0 0 0 0 ] 1e-05
        CrossPowerLawCoeffs:
            nu0: nu0 [ 0 2 -1 0 0 0 0 ] 1e-06
            nuInf: nuInf [ 0 2 -1 0 0 0 0 ] 1e-06
            m: m [ 0 0 1 0 0 0 0 ] 1
            n: n [ 0 0 0 0 0 0 0 ] 1
        BirdCarreauCoeffs:
            nu0: nu0 [ 0 2 -1 0 0 0 0 ] 1e-06
            nuInf: nuInf [ 0 2 -1 0 0 0 0 ] 1e-06
            k: k [ 0 0 1 0 0 0 0 ] 0
            n: n [ 0 0 0 0 0 0 0 ] 1
system:
    controlDict:
        FoamFile:
            class: dictionary
            object: controlDict
            <<: *FoamFile
        application: simpleFoam
        startFrom: latestTime
        startTime: 0
        stopAt: endTime
        endTime: 500
        deltaT: 1
        writeControl: timeStep
        writeInterval: 50
        purgeWrite: 0
        writeFormat: ascii
        writePrecision: 6
        writeCompression: off
        timeFormat: general
        timePrecision: 6
        runTimeModifiable: true
        # Added for force output.
        libs:
            - |
                "libforces.so"
        functions:
            airfoil:
                patches: (walls)
                CofR: (0 0 0)
                outputControl: timeStep
                outputInterval: 5
                type: forces
                pName: p
                UName: U
                rhoName: rhoInf
                rhoInf: 1.18
                log: true
    fvSchemes:
        FoamFile:
            class: dictionary
            object: fvSchemes
            <<: *FoamFile
        ddtSchemes:
            default: steadyState
        gradSchemes:
            default: Gauss linear
        divSchemes:
            default: none
            div(phi, U): bounded Gauss linearUpwind grad(U)
            div(phi, nuTilda): bounded Gauss linearUpwind grad(nuTilda)
            div((nuEff*dev(T(grad(U))))): Gauss linear
        laplacianSchemes:
            default: Gauss linear corrected
        interpolationSchemes:
            default: linear
        snGradSchemes:
            default: corrected
        fluxRequired:
            default: no
            p: ''
    fvSolution:
        FoamFile:
            class: dictionary
            object: fvSolution
            <<: *FoamFile
        solvers:
            p:
                solver: GAMG
                tolerance: 1e-06
                relTol: 0.1
                smoother: GaussSeidel
                nPreSweeps: 0
                nPostSweeps: 2
                cacheAgglomeration: true
                nCellsInCoarsestLevel: 10
                agglomerator: faceAreaPair
                mergeLevels: 1
            U:
                solver: smoothSolver
                smoother: GaussSeidel
                nSweeps: 2
                tolerance: 1e-08
                relTol: 0.1
            nuTilda:
                solver: smoothSolver
                smoother: GaussSeidel
                nSweeps: 2
                tolerance: 1e-08
                relTol: 0.1
        SIMPLE:
            nNonOrthogonalCorrectors: 0
            pRefCell: 0
            pRefValue: 0
            residualControl:
                p: 1e-5
                U: 1e-5
                nuTilda: 1e-5
        relaxationFactors:
            fields:
                p: 0.3
            equations:
                U: 0.7
                nuTilda: 0.7
---
-
    name: Allrun
    type: [embed, text]
    permission: 777
    data: |
        #!/bin/sh
        cd ${0%/*} || exit 1    # run from this directory

        # Source tutorial run functions
        . $WM_PROJECT_DIR/bin/tools/RunFunctions

        application=`getApplication`

        runApplication $application
-
    name: Allclean
    type: [embed, text]
    permission: 777
    data: |
        #!/bin/sh
        cd ${0%/*} || exit 1    # run from this directory

        # Clean time directories only

        rm -rf *[1-9]*
        rm -f log.* 2>/dev/null
-
    name: constant/polyMesh
    type: [path, 7z]
    permission: null
    data: static/polyMesh.7z
---
pipeline:
    - __app__
