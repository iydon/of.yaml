---
openfoam: [7]
version: 0.11.0
order:
    - meta
    - foam
    - static
    - other
---
"0":
    alpha.oil.orig:
        FoamFile: &FoamFile
            version: 2.0
            format: ascii
            class: volScalarField
            object: alpha.oil.orig
        dimensions: "[0 0 0 0 0 0 0]"
        internalField: uniform 0
        boundaryField:
            vessel:
                type: zeroGradient
            oilInlet:
                type: fixedValue
                value: uniform 1
            outlet:
                type: inletOutlet
                inletValue: uniform 0
                value: uniform 0
            shaftRotating:
                type: zeroGradient
            shaft:
                type: zeroGradient
            sparger:
                type: zeroGradient
            stirrer:
                type: zeroGradient
            baffles:
                type: zeroGradient
            AMI1:
                type: cyclicAMI
                value: uniform 0
            AMI2:
                type: cyclicAMI
                value: uniform 0
    epsilon:
        FoamFile:
            class: volScalarField
            object: epsilon
            <<: *FoamFile
        dimensions: "[0 2 -3 0 0 0 0]"
        internalField: uniform 0.007
        boundaryField:
            vessel:
                type: epsilonWallFunction
                value: uniform 0.007
            oilInlet:
                type: fixedValue
                value: uniform 0.007
            outlet:
                type: inletOutlet
                inletValue: uniform 0.007
                value: uniform 0.007
            shaftRotating:
                type: epsilonWallFunction
                value: uniform 0.007
            shaft:
                type: epsilonWallFunction
                value: uniform 0.007
            sparger:
                type: epsilonWallFunction
                value: uniform 0.007
            stirrer:
                type: epsilonWallFunction
                value: uniform 0.007
            baffles:
                type: epsilonWallFunction
                value: uniform 0.007
            AMI1:
                type: cyclicAMI
                value: uniform 0
            AMI2:
                type: cyclicAMI
                value: uniform 0
    k:
        FoamFile:
            class: volScalarField
            object: k
            <<: *FoamFile
        dimensions: "[0 2 -2 0 0 0 0]"
        internalField: uniform 0.01
        boundaryField:
            vessel:
                type: kqRWallFunction
                value: uniform 0.01
            oilInlet:
                type: fixedValue
                value: uniform 0.01
            outlet:
                type: inletOutlet
                inletValue: uniform 0.01
                value: uniform 0.01
            shaftRotating:
                type: kqRWallFunction
                value: uniform 0.01
            shaft:
                type: kqRWallFunction
                value: uniform 0.01
            sparger:
                type: kqRWallFunction
                value: uniform 0.01
            stirrer:
                type: kqRWallFunction
                value: uniform 0.01
            baffles:
                type: kqRWallFunction
                value: uniform 0.01
            AMI1:
                type: cyclicAMI
                value: uniform 0
            AMI2:
                type: cyclicAMI
                value: uniform 0
    nut:
        FoamFile:
            class: volScalarField
            object: nut
            <<: *FoamFile
        dimensions: "[0 2 -1 0 0 0 0]"
        internalField: uniform 0
        boundaryField:
            vessel:
                type: nutkWallFunction
                value: uniform 0
            oilInlet:
                type: fixedValue
                value: uniform 0
            outlet:
                type: inletOutlet
                inletValue: uniform 0
                value: uniform 0
            shaftRotating:
                type: nutkWallFunction
                value: uniform 0
            shaft:
                type: nutkWallFunction
                value: uniform 0
            sparger:
                type: nutkWallFunction
                value: uniform 0
            stirrer:
                type: nutkWallFunction
                value: uniform 0
            baffles:
                type: nutkWallFunction
                value: uniform 0
            AMI1:
                type: cyclicAMI
                value: uniform 0
            AMI2:
                type: cyclicAMI
                value: uniform 0
    p_rgh:
        FoamFile:
            class: volScalarField
            object: p_rgh
            <<: *FoamFile
        dimensions: "[1 -1 -2 0 0 0 0]"
        internalField: uniform 125000
        boundaryField:
            vessel:
                type: fixedFluxPressure
                gradient: uniform 0
                value: uniform 125000
            oilInlet:
                type: fixedFluxPressure
                gradient: uniform 0
                value: uniform 125000
            outlet:
                type: fixedValue
                value: uniform 125000
            shaftRotating:
                type: fixedFluxPressure
                gradient: uniform 0
                value: uniform 125000
            shaft:
                type: fixedFluxPressure
                gradient: uniform 0
                value: uniform 125000
            sparger:
                type: fixedFluxPressure
                gradient: uniform 0
                value: uniform 125000
            stirrer:
                type: fixedFluxPressure
                gradient: uniform 0
                value: uniform 125000
            baffles:
                type: fixedFluxPressure
                gradient: uniform 0
                value: uniform 125000
            AMI1:
                type: cyclicAMI
                value: uniform 0
            AMI2:
                type: cyclicAMI
                value: uniform 0
    U:
        FoamFile:
            class: volVectorField
            object: U
            <<: *FoamFile
        dimensions: "[0 1 -1 0 0 0 0]"
        internalField: uniform (0 0 0)
        boundaryField:
            vessel:
                type: fixedValue
                value: uniform (0 0 0)
            oilInlet:
                type: fixedValue
                value: uniform (0 0 0.2)
            outlet:
                type: pressureInletOutletVelocity
                value: uniform (0 0 0)
            shaftRotating:
                type: movingWallVelocity
                value: uniform (0 0 0)
            shaft:
                type: rotatingWallVelocity
                origin: (0 0 0)
                axis: (0 0 1)
                omega: constant -5
                value: uniform (0 0 0)
            sparger:
                type: fixedValue
                value: uniform (0 0 0)
            stirrer:
                type: movingWallVelocity
                value: uniform (0 0 0)
            baffles:
                type: fixedValue
                value: uniform (0 0 0)
            AMI1:
                type: cyclicAMI
                value: uniform (0 0 0)
            AMI2:
                type: cyclicAMI
                value: uniform (0 0 0)
constant:
    dynamicMeshDict:
        FoamFile:
            class: dictionary
            object: dynamicMeshDict
            <<: *FoamFile
        dynamicFvMesh: dynamicMotionSolverFvMesh
        motionSolverLibs: ( "libfvMotionSolvers.so" )
        motionSolver: solidBody
        cellZone: rotating
        solidBodyMotionFunction: rotatingMotion
        origin: (0 0 0)
        axis: (0 0 1)
        omega: -5  # 5 rad/s
    g:
        FoamFile:
            class: uniformDimensionedVectorField
            object: g
            <<: *FoamFile
        dimensions: "[0 1 -2 0 0 0 0]"
        value: (0 0 -9.81)
    transportProperties:
        FoamFile:
            class: dictionary
            object: transportProperties
            <<: *FoamFile
        phases: (oil water)
        oil:
            transportModel: Newtonian
            nu: 1.2e-05
            rho: 300
        water:
            transportModel: Newtonian
            nu: 1e-6
            rho: 1027
        sigma: 0.027
    turbulenceProperties:
        FoamFile:
            class: dictionary
            object: turbulenceProperties
            <<: *FoamFile
        simulationType: RAS
        RAS:
            RASModel: kEpsilon
            turbulence: on
            printCoeffs: off
system:
    blockMeshDict:
        FoamFile:
            class: dictionary
            object: blockMeshDict
            <<: *FoamFile
        convertToMeters: 1
        vertices:
            - (-0.3 -0.3 -0.15)
            - ( 0.3 -0.3 -0.15)
            - ( 0.3  0.3 -0.15)
            - (-0.3  0.3 -0.15)
            - (-0.3 -0.3  1.40)
            - ( 0.3 -0.3  1.40)
            - ( 0.3  0.3  1.40)
            - (-0.3  0.3  1.40)
        blocks:
            - hex (0 1 2 3 4 5 6 7) (50 50 100) simpleGrading (1 1 1)
        edges: []
        boundary:
            - allBoundary:
              type: patch
              faces:
                - (3 7 6 2)
                - (0 4 7 3)
                - (2 6 5 1)
                - (1 5 4 0)
                - (0 3 2 1)
                - (4 5 6 7)
    controlDict:
        FoamFile:
            class: dictionary
            object: controlDict
            <<: *FoamFile
        application: interFoam
        startFrom: startTime
        startTime: 0
        stopAt: endTime
        endTime: 5.0
        deltaT: 0.001
        writeControl: adjustableRunTime
        writeInterval: 0.025
        purgeWrite: 0
        writeFormat: binary
        writePrecision: 6
        writeCompression: off
        timeFormat: general
        timePrecision: 10
        runTimeModifiable: yes
        adjustTimeStep: yes
        maxCo: 1.5
        maxAlphaCo: 1
        maxDeltaT: 1
    createBafflesDict:
        FoamFile:
            class: dictionary
            object: createPatchDict
            <<: *FoamFile
        internalFacesOnly: true
        baffles:
            rotating:
                type: faceZone
                zoneName: rotating
                patches:
                    master:
                        name: AMI1
                        type: cyclicAMI
                        matchTolerance: 0.0001
                        neighbourPatch: AMI2
                        transform: noOrdering
                    slave:
                        name: AMI2
                        type: cyclicAMI
                        matchTolerance: 0.0001
                        neighbourPatch: AMI1
                        transform: noOrdering
    decomposeParDict:
        FoamFile:
            class: dictionary
            object: decomposeParDict
            <<: *FoamFile
        numberOfSubdomains: 6
        method: scotch
    fvSchemes:
        FoamFile:
            class: dictionary
            object: fvSchemes
            <<: *FoamFile
        ddtSchemes:
            default: Euler
        gradSchemes:
            default: Gauss linear
            grad(U): cellLimited Gauss linear 1
        divSchemes:
            div(rhoPhi, U): Gauss linearUpwind grad(U)
            div(phi, alpha): Gauss vanLeer
            div(phirb, alpha): Gauss linear
            div(phid1, p_rgh): Gauss upwind
            div(phid2, p_rgh): Gauss upwind
            div(rhoPhi, T): Gauss linearUpwind unlimited
            div(rhoPhi, K): Gauss upwind
            div(phi, k): Gauss upwind
            div(phi, epsilon): Gauss upwind
            div(((rho*nuEff)*dev2(T(grad(U))))): Gauss linear
        laplacianSchemes:
            default: Gauss linear limited corrected 0.33
        interpolationSchemes:
            default: linear
        snGradSchemes:
            default: limited corrected 0.33
    fvSolution:
        FoamFile:
            class: dictionary
            object: fvSolution
            <<: *FoamFile
        solvers:
            alpha.oil.*:
                nAlphaCorr: 1
                nAlphaSubCycles: 2
                cAlpha: 1
            p_rgh: &p_rgh
                solver: GAMG
                tolerance: 1e-6
                relTol: 0.02
                smoother: GaussSeidel
            pcorr.*:
                tolerance: 0.1
                relTol: 0
                <<: *p_rgh
            p_rghFinal:
                relTol: 0
                <<: *p_rgh
            .*(rho|rhoFinal):
                solver: diagonal
            (U|T|k|epsilon).*:
                solver: smoothSolver
                smoother: symGaussSeidel
                tolerance: 1e-6
                relTol: 0
                nSweeps: 1
        PIMPLE:
            momentumPredictor: yes
            correctPhi: yes
            nOuterCorrectors: 2
            nCorrectors: 1
            nNonOrthogonalCorrectors: 0
        relaxationFactors:
            equations:
                .*: 1
    setFieldsDict:
        FoamFile:
            class: dictionary
            object: setFieldsDict
            <<: *FoamFile
        defaultFieldValues:
            - volScalarFieldValue alpha.oil 1
        regions:
            - boxToCell:
              box: (-4 -4 -1) (4 4 0.74)
              fieldValues:
                - volScalarFieldValue alpha.oil 0
    snappyHexMeshDict:
        FoamFile:
            class: dictionary
            object: snappyHexMeshDict
            <<: *FoamFile
        # Which of the steps to run
        castellatedMesh: true
        snap: true
        addLayers: false
        geometry:
            vessel:
                type: triSurfaceMesh
                file: >
                    "vessel.stl"
                regions:
                    vessel:
                        name: vessel
            oilInlet:
                type: triSurfaceMesh
                file: >
                    "oilInlet.stl"
                regions:
                    oilInlet:
                        name: oilInlet
            outlet:
                type: triSurfaceMesh
                file: >
                    "outlet.stl"
                regions:
                    outlet:
                        name: outlet
            shaftRotating:
                type: triSurfaceMesh
                file: >
                    "shaftRotating.stl"
                regions:
                    shaftRotating:
                        name: shaftRotating
            shaft:
                type: triSurfaceMesh
                file: >
                    "shaft.stl"
                regions:
                    shaft:
                        name: shaft
            sparger:
                type: triSurfaceMesh
                file: >
                    "sparger.stl"
                regions:
                    sparger:
                        name: sparger
            stirrer:
                type: triSurfaceMesh
                file: >
                    "stirrer.stl"
                regions:
                    stirrer:
                        name: stirrer
            baffles:
                type: triSurfaceMesh
                file: >
                    "baffles.stl"
                regions:
                    baffles:
                        name: baffles
            rotating:
                type: triSurfaceMesh
                file: >
                    "rotating.stl"
        # Settings for the castellatedMesh generation.
        castellatedMeshControls:
            # Refinement parameters
            # ~~~~~~~~~~~~~~~~~~~~~
            # If local number of cells is >= maxLocalCells on any processor
            # switches from from refinement followed by balancing
            # (current method) to (weighted) balancing before refinement.
            maxLocalCells: 100000
            # Overall cell limit (approximately). Refinement will stop immediately
            # upon reaching this number so a refinement level might not complete.
            # Note that this is the number of cells before removing the part which
            # is not 'visible' from the keepPoint. The final number of cells might
            # actually be a lot less.
            maxGlobalCells: 3000000
            # The surface refinement loop might spend lots of iterations refining just a
            # few cells. This setting will cause refinement to stop if <= minimumRefine
            # are selected for refinement. Note: it will at least do one iteration
            # (unless the number of cells to refine is 0)
            minRefinementCells: 0
            # Allow a certain level of imbalance during refining
            # (since balancing is quite expensive)
            # Expressed as fraction of perfect balance (= overall number of cells /
            # nProcs). 0=balance always.
            maxLoadUnbalance: 0.10
            # Number of buffer layers between different levels.
            # 1 means normal 2:1 refinement restriction, larger means slower
            # refinement.
            nCellsBetweenLevels: 1
            # Explicit feature edge refinement
            # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            # Specifies a level for any cell intersected by explicitly provided
            # edges.
            # This is a featureEdgeMesh, read from constant/triSurface for now.
            # Specify 'levels' in the same way as the 'distance' mode in the
            # refinementRegions (see below). The old specification
            #      level   2
            # is equivalent to
            #      levels  ((0 2))
            features:
                -
                    file: >
                        "shaftRotating.eMesh"
                    levels: ((1 1))
                -
                    file: >
                        "shaft.eMesh"
                    levels: ((1 1))
                -
                    file: >
                        "sparger.eMesh"
                    levels: ((1 1))
                -
                    file: >
                        "stirrer.eMesh"
                    levels: ((1 1))
                -
                    file: >
                        "baffles.eMesh"
                    levels: ((1 1))
                -
                    file: >
                        "rotating.eMesh"
                    levels: ((1 1))
                -
                    file: >
                        "oilInlet.eMesh"
                    levels: ((1 1))
                -
                    file: >
                        "vessel.eMesh"
                    levels: ((1 1))
                    file: >
                        "outlet.eMesh"
                    levels: ((1 1))
            # Surface based refinement
            # ~~~~~~~~~~~~~~~~~~~~~~~~
            # Specifies two levels for every surface. The first is the minimum level,
            # every cell intersecting a surface gets refined up to the minimum level.
            # The second level is the maximum level. Cells that 'see' multiple
            # intersections where the intersections make an
            # angle > resolveFeatureAngle get refined up to the maximum level.
            refinementSurfaces:
                vessel:
                    level: (1 2)
                    patchInfo: &patchInfo
                        type: wall
                        inGroups: (meshedWalls)
                oilInlet:
                    level: (0 1)
                    patchInfo:
                        type: patch
                outlet:
                    level: (0 1)
                    patchInfo:
                        type: patch
                shaftRotating:
                    level: (1 1)
                    patchInfo:
                        <<: *patchInfo
                shaft:
                    level: (1 1)
                    patchInfo:
                        <<: *patchInfo
                sparger:
                    level: (1 1)
                    patchInfo:
                        <<: *patchInfo
                stirrer:
                    level: (1 1)
                    patchInfo:
                        <<: *patchInfo
                baffles:
                    level: (1 1)
                    patchInfo:
                        <<: *patchInfo
                rotating:
                    level: (1 2)
                    cellZone: rotating
                    faceZone: rotating
                    cellZoneInside: insidePoint
                    insidePoint: (0 0.1 0.5)
            # Feature angle:
            # - used if min and max refinement level of a surface differ
            # - used if feature snapping (see snapControls below) is used
            resolveFeatureAngle: 30
            # Region-wise refinement
            # ~~~~~~~~~~~~~~~~~~~~~~
            # Specifies refinement level for cells in relation to a surface. One of
            # three modes
            # - distance. 'levels' specifies per distance to the surface the
            #  wanted refinement level. The distances need to be specified in
            #  descending order.
            # - inside. 'levels' is only one entry and only the level is used. All
            #  cells inside the surface get refined up to the level. The surface
            #  needs to be closed for this to be possible.
            # - outside. Same but cells outside.
            refinementRegions: {}
            # Mesh selection
            # ~~~~~~~~~~~~~~
            # After refinement patches get added for all refinementSurfaces and
            # all cells intersecting the surfaces get put into these patches. The
            # section reachable from the locationInMesh is kept.
            # NOTE: This point should never be on a face, always inside a cell, even
            # after refinement.
            locationInMesh: (0 0.1 1.0)
            # Whether any faceZones (as specified in the refinementSurfaces)
            # are only on the boundary of corresponding cellZones or also allow
            # free-standing zone faces. Not used if there are no faceZones.
            allowFreeStandingZoneFaces: true
        # Settings for the snapping.
        snapControls:
            # Number of patch smoothing iterations before finding correspondence
            # to surface
            nSmoothPatch: 3
            # Maximum relative distance for points to be attracted by surface.
            # True distance is this factor times local maximum edge length.
            # Note: changed(corrected) w.r.t 17x! (17x used 2* tolerance)
            tolerance: 3.0
            # Number of mesh displacement relaxation iterations.
            nSolveIter: 30
            # Maximum number of snapping relaxation iterations. Should stop
            # before upon reaching a correct mesh.
            nRelaxIter: 5
            # Feature snapping
            # Number of feature edge snapping iterations.
            # Leave out altogether to disable.
            nFeatureSnapIter: 15
            # Detect (geometric only) features by sampling the surface
            # (default=false).
            implicitFeatureSnap: false
            # Use castellatedMeshControls::features (default = true)
            explicitFeatureSnap: true
            # Detect features between multiple surfaces
            # (only for explicitFeatureSnap, default = false)
            multiRegionFeatureSnap: false
        # Settings for the layer addition.
        addLayersControls:
            # Are the thickness parameters below relative to the undistorted
            # size of the refined cell outside layer (true) or absolute sizes (false).
            relativeSizes: true
            # Layer thickness specification. This can be specified in one of four ways
            # - expansionRatio and finalLayerThickness (cell nearest internal mesh)
            # - expansionRatio and firstLayerThickness (cell on surface)
            # - overall thickness and firstLayerThickness
            # - overall thickness and finalLayerThickness
            # Expansion factor for layer mesh
            expansionRatio: 1.0
            # Wanted thickness of final added cell layer. If multiple layers
            # is the thickness of the layer furthest away from the wall.
            # Relative to undistorted size of cell outside layer.
            # See relativeSizes parameter.
            finalLayerThickness: 0.3
            # Wanted thickness of the layer next to the wall.
            # If relativeSizes this is relative to undistorted size of cell
            # outside layer.
            # firstLayerThickness 0.3
            # Wanted overall thickness of layers.
            # If relativeSizes this is relative to undistorted size of cell
            # outside layer.
            # thickness 0.5
            # Minimum overall thickness of total layers. If for any reason layer
            # cannot be above minThickness do not add layer.
            # If relativeSizes this is relative to undistorted size of cell
            # outside layer..
            minThickness: 0.25
            # Per final patch (so not geometry!) the layer information
            # Note: This behaviour changed after 21x. Any non-mentioned patches
            #       now slide unless:
            #          - nSurfaceLayers is explicitly mentioned to be 0.
            #          - angle to nearest surface < slipFeatureAngle (see below)
            layers:
                vessel:
                    nSurfaceLayers: 1
                    expansionRatio: 1.3
                    finalLayerThickness: 0.5
                    minThickness: 0.1
            # If points get not extruded do nGrow layers of connected faces that are
            # also not grown. This helps convergence of the layer addition process
            # close to features.
            # Note: changed(corrected) w.r.t 17x! (didn't do anything in 17x)
            nGrow: 0
            # Advanced settings
            # When not to extrude surface. 0 is flat surface, 90 is when two faces
            # are perpendicular
            featureAngle: 60
            # At non-patched sides allow mesh to slip if extrusion direction makes
            # angle larger than slipFeatureAngle.
            slipFeatureAngle: 30
            # Maximum number of snapping relaxation iterations. Should stop
            # before upon reaching a correct mesh.
            nRelaxIter: 10
            # Number of smoothing iterations of surface normals
            nSmoothSurfaceNormals: 1
            # Number of smoothing iterations of interior mesh movement direction
            nSmoothNormals: 3
            # Smooth layer thickness over surface patches
            nSmoothThickness: 10
            # Stop layer growth on highly warped cells
            maxFaceThicknessRatio: 0.5
            # Reduce layer growth where ratio thickness to medial
            # distance is large
            maxThicknessToMedialRatio: 0.3
            # Angle used to pick up medial axis points
            # Note: changed(corrected) w.r.t 17x! 90 degrees corresponds to 130 in 17x.
            minMedianAxisAngle: 90
            # Create buffer region for new layer terminations
            nBufferCellsNoExtrude: 0
            # Overall max number of layer addition iterations. The mesher will exit
            # if it reaches this number of iterations; possibly with an illegal
            # mesh.
            nLayerIter: 50
            # Max number of iterations after which relaxed meshQuality controls
            # get used. Up to nRelaxIter it uses the settings in meshQualityControls,
            # after nRelaxIter it uses the values in meshQualityControls::relaxed.
            nRelaxedIter: 20
            # Additional reporting: if there are just a few faces where there
            # are mesh errors (after adding the layers) print their face centres.
            # This helps in tracking down problematic mesh areas.
            # additionalReporting true
        # Generic mesh quality settings. At any undoable phase these determine
        # where to undo.
        meshQualityControls:
            # Maximum non-orthogonality allowed. Set to 180 to disable.
            maxNonOrtho: 65
            # Max skewness allowed. Set to <0 to disable.
            maxBoundarySkewness: 20
            maxInternalSkewness: 4
            # Max concaveness allowed. Is angle (in degrees) below which concavity
            # is allowed. 0 is straight face, <0 would be convex face.
            # Set to 180 to disable.
            maxConcave: 80
            # Minimum pyramid volume. Is absolute volume of cell pyramid.
            # Set to a sensible fraction of the smallest cell volume expected.
            # Set to very negative number (e.g. -1E30) to disable.
            minVol: 1e-13
            # Minimum quality of the tet formed by the face-centre
            # and variable base point minimum decomposition triangles and
            # the cell centre. This has to be a positive number for tracking
            # to work. Set to very negative number (e.g. -1E30) to
            # disable.
            #    <0 = inside out tet,
            #     0 = flat tet
            #     1 = regular tet
            minTetQuality: -1e-30
            # Minimum face area. Set to <0 to disable.
            minArea: -1
            # Minimum face twist. Set to <-1 to disable. dot product of face normal
            # and face centre triangles normal
            minTwist: 0.05
            # Minimum normalised cell determinant
            # 1 = hex, <= 0 = folded or flattened illegal cell
            minDeterminant: 0.001
            # minFaceWeight (0 -> 0.5)
            minFaceWeight: 0.05
            # minVolRatio (0 -> 1)
            minVolRatio: 0.01
            # must be >0 for Fluent compatibility
            minTriangleTwist: -1
            # If >0 : preserve single cells with all points on the surface if the
            #  resulting volume after snapping (by approximation) is larger than
            #  minVolCollapseRatio times old volume (i.e. not collapsed to flat cell).
            #  If <0 : delete always.
            # minVolCollapseRatio 0.5;
            # Advanced
            # Number of error distribution iterations
            nSmoothScale: 4
            # Amount to scale back displacement at error points
            errorReduction: 0.75
            # Optional : some meshing phases allow usage of relaxed rules.
            # See e.g. addLayersControls::nRelaxedIter.
            relaxed:
                # Maximum non-orthogonality allowed. Set to 180 to disable.
                maxNonOrtho: 75
        # Advanced
        # Merge tolerance. Is fraction of overall bounding box of initial mesh.
        # Note: the write tolerance needs to be higher than this.
        mergeTolerance: 1e-6
    surfaceFeaturesDict:
        FoamFile:
            class: dictionary
            object: surfaceFeaturesDict
            <<: *FoamFile
        surfaces:
            - >
                "vessel.stl"
            - >
                "oilInlet.stl"
            - >
                "stirrer.stl"
            - >
                "outlet.stl"
            - >
                "shaft.stl"
            - >
                "shaftRotating.stl"
            - >
                "rotating.stl"
            - >
                "baffles.stl"
            - >
                "sparger.stl"
        includedAngle: 120
---
-
    name: Allrun
    type: [embed, text]
    permission: 777
    data: |
        #!/bin/sh
        cd ${0%/*} || exit 1    # Run from this directory

        # Source tutorial run functions
        . $WM_PROJECT_DIR/bin/tools/RunFunctions

        application=$(getApplication)

        ./Allmesh

        # Initialize alpha
        runApplication setFields

        # Decompose
        runApplication decomposePar -force

        # Run
        runParallel $application

        # Reconstruct
        runApplication reconstructPar -noFunctionObjects
-
    name: Allclean
    type: [embed, text]
    permission: 777
    data: |
        #!/bin/sh
        cd ${0%/*} || exit 1    # Run from this directory

        # Source tutorial clean functions
        . $WM_PROJECT_DIR/bin/tools/CleanFunctions

        cleanCase

        rm -rf constant/extendedFeatureEdgeMesh > /dev/null 2>&1
        rm -f constant/triSurface/*.eMesh* > /dev/null 2>&1
-
    name: Allmesh
    type: [embed, text]
    permission: 777
    data: |
        #!/bin/sh
        cd ${0%/*} || exit 1    # Run from this directory

        # Source tutorial run functions
        . $WM_PROJECT_DIR/bin/tools/RunFunctions

        # Meshing
        runApplication blockMesh
        runApplication surfaceFeatures
        runApplication snappyHexMesh -overwrite
        runApplication createBaffles -overwrite
        runApplication mergeOrSplitBaffles -split -overwrite
-
    name: constant/triSurface
    type: [path, 7z]
    permission: null
    data: static/mixerVesselAMI-triSurface.7z
---
pipeline:
    - blockMesh
    - surfaceFeatures
    - snappyHexMesh -overwrite
    - createBaffles -overwrite
    - mergeOrSplitBaffles -split -overwrite
    - setFields
    - decomposePar -force
    - __app__
    - reconstructPar -noFunctionObjects
