---
openfoam: [7]
version: 0.11.0
order:
    - meta
    - foam
    - static
    - other
---
"0":
    alpha.water.orig:
        FoamFile: &FoamFile
            version: 2.0
            format: ascii
            class: volScalarField
            object: alpha
        dimensions: "[0 0 0 0 0 0 0]"
        internalField: uniform 0
        boundaryField:
            # Set patchGroups for constraint patches
            "#includeEtc": >
                "caseDicts/setConstraintTypes"
            inlet:
                type: fixedValue
                value: $internalField
            outlet:
                type: variableHeightFlowRate
                lowerBound: 0
                upperBound: 1
                value: $internalField
            atmosphere:
                type: inletOutlet
                inletValue: $internalField
                value: $internalField
            hull:
                type: zeroGradient
    k.orig:
        FoamFile:
            class: volScalarField
            object: k
            <<: *FoamFile
        dimensions: "[0 2 -2 0 0 0 0]"
        internalField: uniform 0.00015
        boundaryField:
            # Set patchGroups for constraint patches
            "#includeEtc": >
                "caseDicts/setConstraintTypes"
            inlet:
                type: fixedValue
                value: $internalField
            outlet:
                type: inletOutlet
                inletValue: $internalField
                value: $internalField
            atmosphere:
                type: inletOutlet
                inletValue: $internalField
                value: $internalField
            hull:
                type: kqRWallFunction
                value: $internalField
    nut.orig:
        FoamFile:
            class: volScalarField
            object: nut
            <<: *FoamFile
        dimensions: "[0 2 -1 0 0 0 0]"
        internalField: uniform 5e-07
        boundaryField:
            # Set patchGroups for constraint patches
            "#includeEtc": >
                "caseDicts/setConstraintTypes"
            inlet:
                type: fixedValue
                value: $internalField
            outlet:
                type: zeroGradient
            atmosphere:
                type: zeroGradient
            hull:
                type: nutkRoughWallFunction
                Ks: uniform 100e-6
                Cs: uniform 0.5
                value: $internalField
    omega.orig:
        FoamFile:
            class: volScalarField
            object: omega
            <<: *FoamFile
        dimensions: "[0 0 -1 0 0 0 0]"
        internalField: uniform 2
        boundaryField:
            # Set patchGroups for constraint patches
            "#includeEtc": >
                "caseDicts/setConstraintTypes"
            inlet:
                type: fixedValue
                value: $internalField
            outlet:
                type: inletOutlet
                inletValue: $internalField
                value: $internalField
            atmosphere:
                type: inletOutlet
                inletValue: $internalField
                value: $internalField
            hull:
                type: omegaWallFunction
                value: $internalField
    p_rgh.orig:
        FoamFile:
            class: volScalarField
            object: p_rgh
            <<: *FoamFile
        dimensions: "[1 -1 -2 0 0 0 0]"
        internalField: uniform 0
        boundaryField:
            # Set patchGroups for constraint patches
            "#includeEtc": >
                "caseDicts/setConstraintTypes"
            inlet:
                type: fixedFluxPressure
                value: $internalField
            outlet:
                type: zeroGradient
            atmosphere:
                type: totalPressure
                p0: uniform 0
            hull:
                type: fixedFluxPressure
                value: $internalField
    pointDisplacement:
        FoamFile:
            class: pointVectorField
            object: pointDisplacement
            <<: *FoamFile
        dimensions: "[0 1 0 0 0 0 0]"
        internalField: uniform (0 0 0)
        boundaryField:
            # Set patchGroups for constraint patches
            "#includeEtc": >
                "caseDicts/setConstraintTypes"
            inlet:
                type: fixedValue
                value: uniform (0 0 0)
            outlet:
                type: fixedValue
                value: uniform (0 0 0)
            atmosphere:
                type: fixedValue
                value: uniform (0 0 0)
            hull:
                type: calculated
    U.orig:
        FoamFile:
            class: volVectorField
            object: U
            <<: *FoamFile
        UMean: 1.668
        dimensions: "[0 1 -1 0 0 0 0]"
        internalField: uniform (#neg $UMean 0 0)
        boundaryField:
            # Set patchGroups for constraint patches
            "#includeEtc": >
                "caseDicts/setConstraintTypes"
            inlet:
                type: fixedValue
                value: $internalField
            outlet:
                type: outletPhaseMeanVelocity
                alpha: alpha.water
                UnMean: $UMean
                value: $internalField
            atmosphere:
                type: pressureInletOutletVelocity
                value: uniform (0 0 0)
            hull:
                type: movingWallVelocity
                value: uniform (0 0 0)
constant:
    g:
        FoamFile:
            class: uniformDimensionedVectorField
            object: g
            <<: *FoamFile
        dimensions: "[0 1 -2 0 0 0 0]"
        value: (0 0 -9.81)
    hRef:
        FoamFile:
            class: uniformDimensionedScalarField
            object: hRef
            <<: *FoamFile
        dimensions: "[0 1 0 0 0 0 0]"
        value: 0.244
    transportProperties:
        FoamFile:
            class: dictionary
            object: transportProperties
            <<: *FoamFile
        phases: (water air)
        water:
            transportModel: Newtonian
            nu: 1.09e-06
            rho: 998.8
        air:
            transportModel: Newtonian
            nu: 1.48e-05
            rho: 1
        sigma: 0
    turbulenceProperties:
        FoamFile:
            class: dictionary
            object: turbulenceProperties
            <<: *FoamFile
        simulationType: RAS
        RAS:
            RASModel: kOmegaSST
            turbulence: on
            printCoeffs: on
system:
    blockMeshDict:
        FoamFile:
            class: dictionary
            object: blockMeshDict
            <<: *FoamFile
        convertToMeters: 1
        vertices:
            - (-26 -19 -16)
            - (16 -19 -16)
            - (16 0 -16)
            - (-26 0 -16)
            #
            - (-26 -19 -1)
            - (16 -19 -1)
            - (16 0 -1)
            - (-26 0 -1)
            #
            - (-26 -19 0.185)
            - (16 -19 0.185)
            - (16 0 0.185)
            - (-26 0 0.185)
            #
            - (-26 -19 0.244)
            - (16 -19 0.244)
            - (16 0 0.244)
            - (-26 0 0.244)
            #
            - (-26 -19 0.3)
            - (16 -19 0.3)
            - (16 0 0.3)
            - (-26 0 0.3)
            #
            - (-26 -19 1.6)
            - (16 -19 1.6)
            - (16 0 1.6)
            - (-26 0 1.6)
            #
            - (-26 -19 4)
            - (16 -19 4)
            - (16 0 4)
            - (-26 0 4)
        blocks:
            - hex (0 1 2 3 4 5 6 7) (42 19 50) simpleGrading (1 1 0.05)
            - hex (4 5 6 7 8 9 10 11) (42 19 50) simpleGrading (1 1 1)
            - hex (8 9 10 11 12 13 14 15) (42 19 4) simpleGrading (1 1 1)
            - hex (12 13 14 15 16 17 18 19) (42 19 4) simpleGrading (1 1 1)
            - hex (16 17 18 19 20 21 22 23) (42 19 40) simpleGrading (1 1 1)
            - hex (20 21 22 23 24 25 26 27) (42 19 20) simpleGrading (1 1 5)
        edges: []
        boundary:
            - atmosphere:
              type: patch
              faces:
                - (24 25 26 27)
            - inlet:
              type: patch
              faces:
                - (1 2 6 5)
                - (5 6 10 9)
                - (9 10 14 13)
                - (13 14 18 17)
                - (17 18 22 21)
                - (21 22 26 25)
            - outlet:
              type: patch
              faces:
                - (0 4 7 3)
                - (4 8 11 7)
                - (8 12 15 11)
                - (12 16 19 15)
                - (16 20 23 19)
                - (20 24 27 23)
            - bottom:
              type: symmetryPlane
              faces:
                - (0 3 2 1)
            - side:
              type: symmetryPlane
              faces:
                - (0 1 5 4)
                - (4 5 9 8)
                - (8 9 13 12)
                - (12 13 17 16)
                - (16 17 21 20)
                - (20 21 25 24)
            - midPlane:
              type: symmetryPlane
              faces:
                - (3 7 6 2)
                - (7 11 10 6)
                - (11 15 14 10)
                - (15 19 18 14)
                - (19 23 22 18)
                - (23 27 26 22)
        mergePatchPairs: []
    controlDict:
        FoamFile:
            class: dictionary
            object: controlDict
            <<: *FoamFile
        application: interFoam
        startFrom: startTime
        startTime: 0
        stopAt: endTime
        endTime: 4000
        deltaT: 1
        writeControl: timeStep
        writeInterval: 100
        purgeWrite: 0
        writeFormat: binary
        writePrecision: 6
        writeCompression: off
        timeFormat: general
        timePrecision: 6
        runTimeModifiable: yes
        functions:
            forces:
                type: forces
                libs: ("libforces.so")
                patches: (hull)
                rhoInf: 998.8
                log: on
                writeControl: timeStep
                writeInterval: 1
                CofR: (2.929541 0 0.2)
    decomposeParDict:
        FoamFile:
            class: dictionary
            object: decomposeParDict
            <<: *FoamFile
        numberOfSubdomains: 8
        method: scotch
        simpleCoeffs:
            n: (1 1 1)
            delta: 0.001
        hierarchicalCoeffs:
            n: (2 2 1)
            delta: 0.001
            order: xyz
        metisCoeffs: {}
        manualCoeffs:
            dataFile: >
                ""
        distributed: no
        roots: []
    fvSchemes:
        FoamFile:
            class: dictionary
            object: fvSchemes
            <<: *FoamFile
        ddtSchemes:
            default: localEuler
        gradSchemes:
            default: Gauss linear
            limitedGrad: cellLimited Gauss linear 1
        divSchemes:
            div(rhoPhi, U): Gauss linearUpwind grad(U)
            div(phi, alpha): Gauss vanLeer
            div(phirb, alpha): Gauss linear
            div(phi, k): Gauss linearUpwind limitedGrad
            div(phi, omega): Gauss linearUpwind limitedGrad
            div(((rho*nuEff)*dev2(T(grad(U))))): Gauss linear
        laplacianSchemes:
            default: Gauss linear corrected
        interpolationSchemes:
            default: linear
        snGradSchemes:
            default: corrected
        wallDist:
            method: meshWave
    fvSolution:
        FoamFile:
            class: dictionary
            object: fvSolution
            <<: *FoamFile
        solvers:
            alpha.water.*:
                nAlphaCorr: 2
                nAlphaSubCycles: 1
                cAlpha: 1
                icAlpha: 0
                MULESCorr: yes
                nLimiterIter: 10
                alphaApplyPrevCorr: yes
                solver: smoothSolver
                smoother: symGaussSeidel
                tolerance: 1e-8
                relTol: 0
                minIter: 1
            pcorr.*:
                solver: PCG
                preconditioner:
                    preconditioner: GAMG
                    smoother: GaussSeidel
                    tolerance: 1e-5
                    relTol: 0
                tolerance: 1e-5
                relTol: 0
            p_rgh: &p_rgh
                solver: GAMG
                smoother: DIC
                tolerance: 1e-07
                relTol: 0.01
            p_rghFinal:
                relTol: 0
                <<: *p_rgh
            (U|k|omega).*:
                solver: smoothSolver
                smoother: symGaussSeidel
                nSweeps: 1
                tolerance: 1e-07
                relTol: 0.1
                minIter: 1
        PIMPLE:
            momentumPredictor: no
            nOuterCorrectors: 1
            nCorrectors: 2
            nNonOrthogonalCorrectors: 0
            maxCo: 10
            maxAlphaCo: 5
            rDeltaTSmoothingCoeff: 0.05
            rDeltaTDampingCoeff: 0.5
            nAlphaSpreadIter: 0
            nAlphaSweepIter: 0
            maxDeltaT: 1
        relaxationFactors:
            equations:
                .*: 1
        cache:
            grad(U): ""
    meshQualityDict:
        FoamFile:
            class: dictionary
            object: meshQualityDict
            <<: *FoamFile
        # Maximum non-orthogonality allowed. Set to 180 to disable.
        maxNonOrtho: 70
        # Max skewness allowed. Set to <0 to disable.
        maxBoundarySkewness: 20
        maxInternalSkewness: 4
        # Max concaveness allowed. Is angle (in degrees) below which concavity
        # is allowed. 0 is straight face, <0 would be convex face.
        # Set to 180 to disable.
        maxConcave: 80
        # Minimum pyramid volume. Is absolute volume of cell pyramid.
        # Set to a sensible fraction of the smallest cell volume expected.
        # Set to very negative number (e.g. -1E30) to disable.
        minVol: 1e-13
        # Minimum quality of the tet formed by the face-centre
        # and variable base point minimum decomposition triangles and
        # the cell centre.  Set to very negative number (e.g. -1E30) to
        # disable.
        #    <0 = inside out tet,
        #     0 = flat tet
        #     1 = regular tet
        minTetQuality: 1e-30
        # Minimum face area. Set to <0 to disable.
        minArea: -1
        # Minimum face twist. Set to <-1 to disable. dot product of face normal
        # and face centre triangles normal
        minTwist: 0.05
        # Minimum normalised cell determinant
        # 1 = hex, <= 0 = folded or flattened illegal cell
        minDeterminant: 0.001
        # minFaceWeight (0 -> 0.5)
        minFaceWeight: 0.05
        # minVolRatio (0 -> 1)
        minVolRatio: 0.01
        # must be >0 for Fluent compatibility
        minTriangleTwist: -1
        # If >0 : preserve single cells with all points on the surface if the
        # resulting volume after snapping (by approximation) is larger than
        # minVolCollapseRatio times old volume (i.e. not collapsed to flat cell).
        # If <0 : delete always.
        # minVolCollapseRatio 0.5
        # Advanced
        # Number of error distribution iterations
        nSmoothScale: 4
        # Amount to scale back displacement at error points
        errorReduction: 0.75
        # Optional : some meshing phases allow usage of relaxed rules.
        # See e.g. addLayersControls::nRelaxedIter.
        relaxed:
            # Maximum non-orthogonality allowed. Set to 180 to disable.
            maxNonOrtho: 75
    refineMeshDict:
        FoamFile:
            class: dictionary
            object: refineMeshDict
            <<: *FoamFile
        set: c0
        coordinateSystem: global
        globalCoeffs:
            tan1: (1 0 0)
            tan2: (0 1 0)
        patchLocalCoeffs:
            patch: outside
            tan1: (1 0 0)
        directions: ( tan1 tan2 )
        useHexTopology: no
        geometricCut: yes
        writeMesh: no
    setFieldsDict:
        FoamFile:
            class: dictionary
            object: setFieldsDict
            <<: *FoamFile
        defaultFieldValues:
            - volScalarFieldValue alpha.water 0
        regions:
            # Set cell values
            # (does zerogradient on boundaries)
            - boxToCell:
              box: (-999 -999 -999) (999 999 0.244)
              fieldValues:
                - volScalarFieldValue alpha.water 1
            # Set patch values (using ==)
            - boxToFace:
              box: (-999 -999 -999) (999 999 0.244)
              fieldValues:
                - volScalarFieldValue alpha.water 1
    snappyHexMeshDict:
        FoamFile:
            class: dictionary
            object: snappyHexMeshDict
            <<: *FoamFile
        # Which of the steps to run
        castellatedMesh: true
        snap: true
        addLayers: true
        # Geometry. Definition of all surfaces. All surfaces are of class
        # searchableSurface.
        # Surfaces are used
        # - to specify refinement for any mesh cell intersecting it
        # - to specify refinement for any mesh cell inside/outside/near
        # - to 'snap' the mesh boundary to the surface
        geometry:
            hull:
                type: triSurfaceMesh
                file: >
                    "DTC-scaled.stl"
                patchInfo:
                    type: wall
        # Settings for the castellatedMesh generation.
        castellatedMeshControls:
            # Refinement parameters
            # ~~~~~~~~~~~~~~~~~~~~~
            # If local number of cells is >= maxLocalCells on any processor
            # switches from from refinement followed by balancing
            # (current method) to (weighted) balancing before refinement.
            maxLocalCells: 100000
            # Overall cell limit (approximately). Refinement will stop immediately
            # upon reaching this number so a refinement level might not complete.
            # Note that this is the number of cells before removing the part which
            # is not 'visible' from the keepPoint. The final number of cells might
            # actually be a lot less.
            maxGlobalCells: 2000000
            # The surface refinement loop might spend lots of iterations refining just a
            # few cells. This setting will cause refinement to stop if <= minimumRefine
            # are selected for refinement. Note: it will at least do one iteration
            # (unless the number of cells to refine is 0)
            minRefinementCells: 0
            # Number of buffer layers between different levels.
            # 1 means normal 2:1 refinement restriction, larger means slower
            # refinement.
            nCellsBetweenLevels: 3
            # Explicit feature edge refinement
            # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            # Specifies a level for any cell intersected by its edges.
            # This is a featureEdgeMesh, read from constant/triSurface for now.
            features:
                -
                    file: >
                        "DTC-scaled.eMesh"
                    level: 0
            # Surface based refinement
            # ~~~~~~~~~~~~~~~~~~~~~~~~
            # Specifies two levels for every surface. The first is the minimum level,
            # every cell intersecting a surface gets refined up to the minimum level.
            # The second level is the maximum level. Cells that 'see' multiple
            # intersections where the intersections make an
            # angle > resolveFeatureAngle get refined up to the maximum level.
            refinementSurfaces:
                hull:
                    # Surface-wise min and max refinement level
                    level: (0 0)
            resolveFeatureAngle: 45
            # Region-wise refinement
            # ~~~~~~~~~~~~~~~~~~~~~~
            # Specifies refinement level for cells in relation to a surface. One of
            # three modes
            # - distance. 'levels' specifies per distance to the surface the
            #   wanted refinement level. The distances need to be specified in
            #   descending order.
            # - inside. 'levels' is only one entry and only the level is used. All
            #   cells inside the surface get refined up to the level. The surface
            #   needs to be closed for this to be possible.
            # - outside. Same but cells outside.
            refinementRegions: {}
            # Mesh selection
            # ~~~~~~~~~~~~~~
            # After refinement patches get added for all refinementSurfaces and
            # all cells intersecting the surfaces get put into these patches. The
            # section reachable from the locationInMesh is kept.
            # NOTE: This point should never be on a face, always inside a cell, even
            # after refinement.
            locationInMesh: (-0.7 0 0)
            # Whether any faceZones (as specified in the refinementSurfaces)
            # are only on the boundary of corresponding cellZones or also allow
            # free-standing zone faces. Not used if there are no faceZones.
            allowFreeStandingZoneFaces: true
        # Settings for the snapping.
        snapControls:
            #- Number of patch smoothing iterations before finding correspondence
            #  to surface
            nSmoothPatch: 3
            #- Relative distance for points to be attracted by surface feature point
            #  or edge. True distance is this factor times local
            #  maximum edge length.
            #    tolerance 4.0
            tolerance: 1.0
            #- Number of mesh displacement relaxation iterations.
            nSolveIter: 100
            #- Maximum number of snapping relaxation iterations. Should stop
            #  before upon reaching a correct mesh.
            nRelaxIter: 5
            nFeatureSnapIter: 10
        # Settings for the layer addition.
        addLayersControls:
            # Are the thickness parameters below relative to the undistorted
            # size of the refined cell outside layer (true) or absolute sizes (false).
            relativeSizes: true
            # Per final patch (so not geometry!) the layer information
            layers:
                hull:
                    nSurfaceLayers: 3
            # Expansion factor for layer mesh
            expansionRatio: 1.5
            # Wanted thickness of final added cell layer. If multiple layers
            # is the thickness of the layer furthest away from the wall.
            # Relative to undistorted size of cell outside layer.
            # See relativeSizes parameter.
            finalLayerThickness: 0.7
            # Minimum thickness of cell layer. If for any reason layer
            # cannot be above minThickness do not add layer.
            # See relativeSizes parameter.
            minThickness: 0.25
            # If points get not extruded do nGrow layers of connected faces that are
            # also not grown. This helps convergence of the layer addition process
            # close to features.
            # Note: changed(corrected) w.r.t 17x! (didn't do anything in 17x)
            nGrow: 0
            # Advanced settings
            # When not to extrude surface. 0 is flat surface, 90 is when two faces
            # are perpendicular
            featureAngle: 60
            # Maximum number of snapping relaxation iterations. Should stop
            # before upon reaching a correct mesh.
            nRelaxIter: 5
            # Number of smoothing iterations of surface normals
            nSmoothSurfaceNormals: 1
            # Number of smoothing iterations of interior mesh movement direction
            nSmoothNormals: 3
            # Smooth layer thickness over surface patches
            nSmoothThickness: 10
            # Stop layer growth on highly warped cells
            maxFaceThicknessRatio: 0.5
            # Reduce layer growth where ratio thickness to medial
            # distance is large
            maxThicknessToMedialRatio: 0.3
            # Angle used to pick up medial axis points
            # Note: changed(corrected) w.r.t 17x! 90 degrees corresponds to 130 in 17x.
            minMedianAxisAngle: 90
            # Create buffer region for new layer terminations
            nBufferCellsNoExtrude: 0
            # Overall max number of layer addition iterations. The mesher will exit
            # if it reaches this number of iterations; possibly with an illegal
            # mesh.
            nLayerIter: 50
            # Max number of iterations after which relaxed meshQuality controls
            # get used. Up to nRelaxIter it uses the settings in meshQualityControls,
            # after nRelaxIter it uses the values in meshQualityControls::relaxed.
            nRelaxedIter: 20
        # Generic mesh quality settings. At any undoable phase these determine
        # where to undo.
        meshQualityControls:
            "#include": >
                "meshQualityDict"
        # Advanced
        # Flags for optional output
        # 0 : only write final meshes
        # 1 : write intermediate meshes
        # 2 : write volScalarField with cellLevel for postprocessing
        # 4 : write current intersections as .obj files
        debug: 0
        # Merge tolerance. Is fraction of overall bounding box of initial mesh.
        # Note: the write tolerance needs to be higher than this.
        mergeTolerance: 1E-6
    surfaceFeaturesDict:
        FoamFile:
            class: dictionary
            object: surfaceFeaturesDict
            <<: *FoamFile
        surfaces: ("DTC-scaled.stl")
        # Identify a feature when angle between faces < includedAngle
        includedAngle: 150
        subsetFeatures:
            # Keep nonManifold edges (edges with >2 connected faces)
            nonManifoldEdges: yes
            # Keep open edges (edges with 1 connected face)
            openEdges: yes
    topoSetDict.1:
        FoamFile:
            class: dictionary
            object: topoSetDict
            <<: *FoamFile
        actions:
            -
                name: c0
                type: cellSet
                action: new
                source: boxToCell
                sourceInfo:
                    box: (-10 -6 -3) (10 0 3)
    topoSetDict.2:
        FoamFile:
            class: dictionary
            object: topoSetDict
            <<: *FoamFile
        actions:
            -
                name: c0
                type: cellSet
                action: new
                source: boxToCell
                sourceInfo:
                    box: (-5 -3 -2.5) (9 0 2)
    topoSetDict.3:
        FoamFile:
            class: dictionary
            object: topoSetDict
            <<: *FoamFile
        actions:
            -
                name: c0
                type: cellSet
                action: new
                source: boxToCell
                sourceInfo:
                    box: (-3 -1.5 -1) (8 0 1.5)
    topoSetDict.4:
        FoamFile:
            class: dictionary
            object: topoSetDict
            <<: *FoamFile
        actions:
            -
                name: c0
                type: cellSet
                action: new
                source: boxToCell
                sourceInfo:
                    box: (-2 -1 -0.6) (7 0 1)
    topoSetDict.5:
        FoamFile:
            class: dictionary
            object: topoSetDict
            <<: *FoamFile
        actions:
            -
                name: c0
                type: cellSet
                action: new
                source: boxToCell
                sourceInfo:
                    box: (-1 -0.6 -0.3) (6.5 0 0.8)
    topoSetDict.6:
        FoamFile:
            class: dictionary
            object: topoSetDict
            <<: *FoamFile
        actions:
            -
                name: c0
                type: cellSet
                action: new
                source: boxToCell
                sourceInfo:
                    box: (-0.5 -0.55 -0.15) (6.25 0 0.65)
---
-
    name: Allrun
    type: [embed, text]
    permission: 777
    data: |
        #!/bin/sh
        cd ${0%/*} || exit 1    # Run from this directory

        # Source tutorial run functions
        . $WM_PROJECT_DIR/bin/tools/RunFunctions

        # copy DTC hull surface from resources folder
        cp $FOAM_TUTORIALS/resources/geometry/DTC-scaled.stl.gz constant/triSurface/

        runApplication surfaceFeatures

        runApplication blockMesh

        for i in 1 2 3 4 5 6
        do
            runApplication -s $i \
                topoSet -dict system/topoSetDict.${i}

            runApplication -s $i \
                refineMesh -dict system/refineMeshDict -overwrite
        done

        runApplication snappyHexMesh -overwrite

        runApplication renumberMesh -overwrite

        runApplication setFields

        runApplication decomposePar

        runParallel $(getApplication)

        runApplication reconstructPar
-
    name: Allclean
    type: [embed, text]
    permission: 777
    data: |
        #!/bin/sh
        cd ${0%/*} || exit 1    # Run from this directory

        # Source tutorial clean functions
        . $WM_PROJECT_DIR/bin/tools/CleanFunctions

        # remove surface
        rm -f constant/triSurface/DTC-scaled.stl.gz > /dev/null 2>&1
        rm -rf constant/extendedFeatureEdgeMesh > /dev/null 2>&1
        rm -f constant/triSurface/DTC-scaled.eMesh > /dev/null 2>&1

        cleanCase
        rm constant/polyMesh/boundary > /dev/null 2>&1
        rm system/topoSetDict > /dev/null 2>&1
-
    name: README
    type: [embed, text]
    permission: null
    data: |
        Reference:
        Duisburg Test Case (DTC)
        el Moctar, O., Shigunov, V., Zorn, T.,
        Duisburg Test Case: Post-Panamax Container Ship for Benchmarking,
        Journal of Ship Technology Research,
        Vol.59, No.3, pp. 50-65, 2012
-
    name: constant/triSurface/README
    type: [embed, text]
    permission: null
    data: |
        Folder to house tri-surfaces

        The Allrun script copies the surface from the $FOAM_TUTORIALS/resources/geometry
        folder
---
pipeline: null
