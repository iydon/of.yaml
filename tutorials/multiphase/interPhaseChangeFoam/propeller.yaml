---
openfoam: [7]
version: 0.11.0
order:
    - meta
    - foam
    - static
    - other
---
"0":
    alpha.water:
        FoamFile: &FoamFile
            version: 2.0
            format: ascii
            class: volScalarField
            object: alpha.water
        dimensions: "[0 0 0 0 0 0 0]"
        internalField: uniform 1
        boundaryField:
            # Set patchGroups for constraint patches
            "#includeEtc": >
                "caseDicts/setConstraintTypes"
            inlet:
                type: fixedValue
                value: $internalField
            outlet:
                type: inletOutlet
                inletValue: $internalField
            wall:
                type: zeroGradient
                value: $internalField
    epsilon:
        FoamFile:
            class: volScalarField
            object: epsilon
            <<: *FoamFile
        dimensions: "[0 2 -3 0 0 0 0]"
        internalField: uniform 0.0495
        boundaryField:
            # Set patchGroups for constraint patches
            "#includeEtc": >
                "caseDicts/setConstraintTypes"
            inlet:
                type: fixedValue
                value: $internalField
            outlet:
                type: inletOutlet
                inletValue: $internalField
                value: $internalField
            wall:
                type: epsilonWallFunction
                value: $internalField
    k:
        FoamFile:
            class: volScalarField
            object: k
            <<: *FoamFile
        dimensions: "[0 2 -2 0 0 0 0]"
        internalField: uniform 0.06
        boundaryField:
            # Set patchGroups for constraint patches
            "#includeEtc": >
                "caseDicts/setConstraintTypes"
            inlet:
                type: fixedValue
                value: $internalField
            outlet:
                type: inletOutlet
                inletValue: $internalField
                value: $internalField
            wall:
                type: kqRWallFunction
                value: $internalField
    nut:
        FoamFile:
            class: volScalarField
            object: nut
            <<: *FoamFile
        dimensions: "[0 2 -1 0 0 0 0]"
        internalField: uniform 0
        boundaryField:
            # Set patchGroups for constraint patches
            "#includeEtc": >
                "caseDicts/setConstraintTypes"
            inlet:
                type: calculated
                value: uniform 0
            outlet:
                type: calculated
                value: uniform 0
            wall:
                type: nutkWallFunction
                value: uniform 0
    p_rgh:
        FoamFile:
            class: volScalarField
            object: p_rgh
            <<: *FoamFile
        dimensions: "[1 -1 -2 0 0 0 0]"
        internalField: uniform 0
        boundaryField:
            # Set patchGroups for constraint patches
            "#includeEtc": >
                "caseDicts/setConstraintTypes"
            inlet:
                type: fixedFluxPressure
            outlet:
                type: totalPressure
                p0: $internalField
            wall:
                type: fixedFluxPressure
    U:
        FoamFile:
            class: volVectorField
            object: U
            <<: *FoamFile
        dimensions: "[0 1 -1 0 0 0 0]"
        internalField: uniform (0 0 0)
        boundaryField:
            # Set patchGroups for constraint patches
            "#includeEtc": >
                "caseDicts/setConstraintTypes"
            inlet:
                type: uniformFixedValue
                uniformValue: table (
                        (0 (0 0 0))
                        (0.01 (0 -15 0))
                        (100 (0 -15 0))
                    )
                value: $internalField
            outlet:
                type: pressureInletOutletVelocity
                inletValue: uniform (0 0 0)
                value: uniform (0 0 0)
            outerCylinder:
                type: noSlip
            propeller.*:
                type: movingWallVelocity
                value: uniform (0 0 0)
constant:
    dynamicMeshDict:
        FoamFile:
            class: dictionary
            object: dynamicMeshDict
            <<: *FoamFile
        dynamicFvMesh: dynamicMotionSolverFvMesh
        motionSolverLibs: ( "libfvMotionSolvers.so" )
        motionSolver: solidBody
        cellZone: innerCylinder
        solidBodyMotionFunction: rotatingMotion
        origin: (0 0 0)
        axis: (0 1 0)
        omega: table (
                (0 0)
                (0.01 628)
                (0.022 628)
                (0.03 419)
                (100 419)
            )
    g:
        FoamFile:
            class: uniformDimensionedVectorField
            object: g
            <<: *FoamFile
        dimensions: "[0 1 -2 0 0 0 0]"
        value: (0 0 0)
    transportProperties:
        FoamFile:
            class: dictionary
            object: transportProperties
            <<: *FoamFile
        phases: (water vapour)
        phaseChangeTwoPhaseMixture: SchnerrSauer
        pSat: 2300  # Saturation pressure
        sigma: 0.07
        water:
            transportModel: Newtonian
            nu: 9e-07
            rho: 1000
        vapour:
            transportModel: Newtonian
            nu: 4.273e-04
            rho: 0.02308
        KunzCoeffs:
            UInf: 20.0
            tInf: 0.005  # L = 0.1 m
            Cc: 1000
            Cv: 1000
        MerkleCoeffs:
            UInf: 20.0
            tInf: 0.005  # L = 0.1 m
            Cc: 80
            Cv: 1e-03
        SchnerrSauerCoeffs:
            n: 1.6e+13
            dNuc: 2.0e-06
            Cc: 1
            Cv: 1
    turbulenceProperties:
        FoamFile:
            class: dictionary
            object: turbulenceProperties
            <<: *FoamFile
        simulationType: RAS
        RAS:
            RASModel: kEpsilon
            turbulence: on
            printCoeffs: on
system:
    blockMeshDict:
        FoamFile:
            class: dictionary
            object: blockMeshDict
            <<: *FoamFile
        convertToMeters: 1
        vertices:
            - (-0.3 -0.81 -0.3)
            - ( 0.3 -0.81 -0.3)
            - ( 0.3  0.21 -0.3)
            - (-0.3  0.21 -0.3)
            - (-0.3 -0.81  0.3)
            - ( 0.3 -0.81  0.3)
            - ( 0.3  0.21  0.3)
            - (-0.3  0.21  0.3)
        blocks:
            - hex (0 1 2 3 4 5 6 7) (12 20 12) simpleGrading (1 1 1)
        edges: []
        boundary:
            - walls:
              type: wall
              faces:
                - (2 6 5 1)
                - (0 3 2 1)
                - (0 4 7 3)
                - (4 5 6 7)
            - inlet:
              type: patch
              faces:
                - (3 7 6 2)
            - outlet:
              type: patch
              faces:
                - (1 5 4 0)
    controlDict:
        FoamFile:
            class: dictionary
            object: controlDict
            <<: *FoamFile
        application: interPhaseChangeFoam
        startFrom: startTime
        startTime: 0
        stopAt: endTime
        endTime: 0.1
        deltaT: 1e-5
        writeControl: adjustableRunTime
        writeInterval: 0.001
        purgeWrite: 0
        writeFormat: binary
        writePrecision: 6
        writeCompression: off
        timeFormat: general
        timePrecision: 6
        runTimeModifiable: true
        adjustTimeStep: yes
        maxCo: 2
        maxAlphaCo: 1
    createBafflesDict:
        FoamFile:
            class: dictionary
            object: createPatchDict
            <<: *FoamFile
        internalFacesOnly: true
        baffles:
            rotating:
                type: faceZone
                zoneName: innerCylinder
                patches:
                    master:
                        name: AMI1
                        type: cyclicAMI
                        neighbourPatch: AMI2
                    slave:
                        name: AMI2
                        type: cyclicAMI
                        neighbourPatch: AMI1
    decomposeParDict:
        FoamFile:
            class: dictionary
            object: decomposeParDict
            <<: *FoamFile
        numberOfSubdomains: 4
        method: hierarchical
        hierarchicalCoeffs:
            n: (1 4 1)
            delta: 0.001
            order: xyz
    fvSchemes:
        FoamFile:
            class: dictionary
            object: fvSchemes
            <<: *FoamFile
        ddtSchemes:
            default: Euler
        gradSchemes:
            default: Gauss linear
            grad(U): cellLimited Gauss linear 1
        divSchemes:
            default: none
            div(phi, alpha): Gauss vanLeer
            div(phirb, alpha): Gauss linear
            div(rhoPhi, U): Gauss linearUpwind grad(U)
            div(phi, k): Gauss upwind
            div(phi, epsilon): Gauss upwind
            div(((rho*nuEff)*dev2(T(grad(U))))): Gauss linear
        laplacianSchemes:
            default: Gauss linear limited corrected 0.33
        interpolationSchemes:
            default: linear
        snGradSchemes:
            default: limited corrected 0.33
    fvSolution:
        FoamFile:
            class: dictionary
            object: fvSolution
            <<: *FoamFile
        solvers:
            alpha.water.*:
                cAlpha: 0
                nAlphaCorr: 2
                nAlphaSubCycles: 1
                MULESCorr: yes
                nLimiterIter: 5
                solver: smoothSolver
                smoother: symGaussSeidel
                tolerance: 1e-8
                relTol: 0
                maxIter: 10
                minIter: 1
            pcorr.*: &pcorr
                solver: GAMG
                tolerance: 1e-2
                relTol: 0
                smoother: DICGaussSeidel
                cacheAgglomeration: no
                maxIter: 50
            p_rgh: &p_rgh
                tolerance: 1e-9
                relTol: 0.01
                <<: *pcorr
            p_rghFinal:
                tolerance: 1e-9
                relTol: 0
                <<: *p_rgh
            (U|k|epsilon): &U
                solver: smoothSolver
                smoother: symGaussSeidel
                tolerance: 1e-6
                relTol: 0.1
                minIter: 1
            (U|k|epsilon)Final:
                relTol: 0
                <<: *U
        PIMPLE:
            correctPhi: yes
            nOuterCorrectors: 3
            nCorrectors: 1
            nNonOrthogonalCorrectors: 0
        relaxationFactors:
            "(U|k|epsilon).*": 1
        cache:
            grad(U): ""
    snappyHexMeshDict:
        FoamFile:
            class: dictionary
            object: snappyHexMeshDict
            <<: *FoamFile
        # Which of the steps to run
        castellatedMesh: true
        snap: true
        addLayers: false
        # Geometry. Definition of all surfaces. All surfaces are of class
        # searchableSurface.
        # Surfaces are used
        # - to specify refinement for any mesh cell intersecting it
        # - to specify refinement for any mesh cell inside/outside/near
        # - to 'snap' the mesh boundary to the surface
        geometry:
            innerCylinder:
                type: triSurfaceMesh
                file: >
                    "innerCylinder.obj"
                regions:
                    innerCylinder:
                        name: innerCylinder
            middleCylinder:
                type: triSurfaceMesh
                file: >
                    "middleCylinder.obj"
                regions:
                    middleCylinder:
                        name: middleCylinder
            outerCylinder:
                type: triSurfaceMesh
                file: >
                    "outerCylinder.obj"
                regions:
                    outerCylinderWall:
                        name: outerCylinder
                    outerCylinderInlet:
                        name: inlet
                    outerCylinderOutlet:
                        name: outlet
            propeller:
                type: triSurfaceMesh
                file: >
                    "propeller.obj"
                regions:
                    propellerStem:
                        name: propellerStem
                    propellerTip:
                        name: propellerTip
        # Settings for the castellatedMesh generation.
        castellatedMeshControls:
            # Refinement parameters
            # ~~~~~~~~~~~~~~~~~~~~~
            # If local number of cells is >= maxLocalCells on any processor
            # switches from from refinement followed by balancing
            # (current method) to (weighted) balancing before refinement.
            maxLocalCells: 100000
            # Overall cell limit (approximately). Refinement will stop immediately
            # upon reaching this number so a refinement level might not complete.
            # Note that this is the number of cells before removing the part which
            # is not 'visible' from the keepPoint. The final number of cells might
            # actually be a lot less.
            maxGlobalCells: 2000000
            # The surface refinement loop might spend lots of iterations refining just a
            # few cells. This setting will cause refinement to stop if <= minimumRefine
            # are selected for refinement. Note: it will at least do one iteration
            # (unless the number of cells to refine is 0)
            minRefinementCells: 0
            # Allow a certain level of imbalance during refining
            # (since balancing is quite expensive)
            # Expressed as fraction of perfect balance (= overall number of cells /
            # nProcs). 0=balance always.
            maxLoadUnbalance: 0.10
            # Number of buffer layers between different levels.
            # 1 means normal 2:1 refinement restriction, larger means slower
            # refinement.
            nCellsBetweenLevels: 2
            # Explicit feature edge refinement
            # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            # Specifies a level for any cell intersected by its edges.
            # This is a featureEdgeMesh, read from constant/triSurface for now.
            features:
                -
                    file: >
                        "innerCylinder.eMesh"
                    level: 4
                -
                    file: >
                        "outerCylinder.eMesh"
                    level: 0
                -
                    file: >
                        "propeller.eMesh"
                    level: 4
            # Surface based refinement
            # ~~~~~~~~~~~~~~~~~~~~~~~~
            # Specifies two levels for every surface. The first is the minimum level,
            # every cell intersecting a surface gets refined up to the minimum level.
            # The second level is the maximum level. Cells that 'see' multiple
            # intersections where the intersections make an
            # angle > resolveFeatureAngle get refined up to the maximum level.
            refinementSurfaces:
                innerCylinder:
                    level: (4 4)
                    cellZone: innerCylinder
                    faceZone: innerCylinder
                    cellZoneInside: inside
                outerCylinder:
                    level: (0 0)
                    regions:
                        inlet:
                            level: (0 0)
                            patchInfo:
                                type: patch
                        outlet:
                            level: (0 0)
                            patchInfo:
                                type: patch
                propeller:
                    level: (4 4)
                    regions:
                        propellerTip:
                            level: (4 5)
            # Resolve sharp angles
            resolveFeatureAngle: 30
            # Region-wise refinement
            # ~~~~~~~~~~~~~~~~~~~~~~
            # Specifies refinement level for cells in relation to a surface. One of
            # three modes
            # - distance. 'levels' specifies per distance to the surface the
            #  wanted refinement level. The distances need to be specified in
            #  descending order.
            # - inside. 'levels' is only one entry and only the level is used. All
            #  cells inside the surface get refined up to the level. The surface
            #  needs to be closed for this to be possible.
            # - outside. Same but cells outside.
            refinementRegions:
                innerCylinder:
                    mode: inside
                    levels: ((1E15 4))
                middleCylinder:
                    mode: inside
                    levels: ((1E15 3))
            # Mesh selection
            # ~~~~~~~~~~~~~~
            # After refinement patches get added for all refinementSurfaces and
            # all cells intersecting the surfaces get put into these patches. The
            # section reachable from the locationInMesh is kept.
            # NOTE: This point should never be on a face, always inside a cell, even
            # after refinement.
            locationInMesh: (0.01 -0.5 0.01)
            # Whether any faceZones (as specified in the refinementSurfaces)
            # are only on the boundary of corresponding cellZones or also allow
            # free-standing zone faces. Not used if there are no faceZones.
            allowFreeStandingZoneFaces: false
        # Settings for the snapping.
        snapControls:
            # Number of patch smoothing iterations before finding correspondence
            # to surface
            nSmoothPatch: 3
            # Relative distance for points to be attracted by surface feature point
            # or edge. True distance is this factor times local
            # maximum edge length.
            tolerance: 4.0  # 1.0
            # Number of mesh displacement relaxation iterations.
            nSolveIter: 300
            # Maximum number of snapping relaxation iterations. Should stop
            # before upon reaching a correct mesh.
            nRelaxIter: 5
            # Feature snapping
            # Number of feature edge snapping iterations.
            # Leave out altogether to disable.
            nFeatureSnapIter: 10
            # Detect (geometric only) features by sampling the surface
            # (default=false).
            implicitFeatureSnap: true
            # Use castellatedMeshControls::features (default = true)
            explicitFeatureSnap: false
            # Detect features between multiple surfaces
            # (only for explicitFeatureSnap, default = false)
            multiRegionFeatureSnap: true
        # Settings for the layer addition.
        addLayersControls:
            # Are the thickness parameters below relative to the undistorted
            # size of the refined cell outside layer (true) or absolute sizes (false).
            relativeSizes: true
            # Per final patch (so not geometry!) the layer information
            layers: {}
            # Expansion factor for layer mesh
            expansionRatio: 1.0
            # Wanted thickness of final added cell layer. If multiple layers
            # is the thickness of the layer furthest away from the wall.
            # Relative to undistorted size of cell outside layer.
            # See relativeSizes parameter.
            finalLayerThickness: 0.3
            # Minimum thickness of cell layer. If for any reason layer
            # cannot be above minThickness do not add layer.
            # See relativeSizes parameter.
            minThickness: 0.1
            # If points get not extruded do nGrow layers of connected faces that are
            # also not grown. This helps convergence of the layer addition process
            # close to features.
            # Note: changed(corrected) w.r.t 17x! (didn't do anything in 17x)
            nGrow: 0
            # Advanced settings
            # When not to extrude surface. 0 is flat surface, 90 is when two faces
            # are perpendicular
            featureAngle: 30
            # Maximum number of snapping relaxation iterations. Should stop
            # before upon reaching a correct mesh.
            nRelaxIter: 3
            # Number of smoothing iterations of surface normals
            nSmoothSurfaceNormals: 1
            # Number of smoothing iterations of interior mesh movement direction
            nSmoothNormals: 3
            # Smooth layer thickness over surface patches
            nSmoothThickness: 10
            # Stop layer growth on highly warped cells
            maxFaceThicknessRatio: 0.5
            # Reduce layer growth where ratio thickness to medial
            # distance is large
            maxThicknessToMedialRatio: 0.3
            # Angle used to pick up medial axis points
            # Note: changed(corrected) w.r.t 17x! 90 degrees corresponds to 130 in 17x.
            minMedianAxisAngle: 90
            # Create buffer region for new layer terminations
            nBufferCellsNoExtrude: 0
            # Overall max number of layer addition iterations. The mesher will exit
            # if it reaches this number of iterations possibly with an illegal
            # mesh.
            nLayerIter: 50
        # Generic mesh quality settings. At any undoable phase these determine
        # where to undo.
        meshQualityControls:
            # Maximum non-orthogonality allowed. Set to 180 to disable.
            maxNonOrtho: 65
            # Max skewness allowed. Set to <0 to disable.
            maxBoundarySkewness: 20
            maxInternalSkewness: 4
            # Max concaveness allowed. Is angle (in degrees) below which concavity
            # is allowed. 0 is straight face, <0 would be convex face.
            # Set to 180 to disable.
            maxConcave: 80
            # Minimum pyramid volume. Is absolute volume of cell pyramid.
            # Set to a sensible fraction of the smallest cell volume expected.
            # Set to very negative number (e.g. -1E30) to disable.
            minVol: 1e-13
            # Minimum quality of the tet formed by the face-centre
            # and variable base point minimum decomposition triangles and
            # the cell centre. This has to be a positive number for tracking
            # to work. Set to very negative number (e.g. -1E30) to
            # disable.
            #    <0 = inside out tet,
            #     0 = flat tet
            #     1 = regular tet
            minTetQuality: -1  # 1e-30
            # Minimum face area. Set to <0 to disable.
            minArea: -1
            # Minimum face twist. Set to <-1 to disable. dot product of face normal
            # and face centre triangles normal
            minTwist: 0.01
            # Minimum normalised cell determinant
            # 1 = hex, <= 0 = folded or flattened illegal cell
            minDeterminant: 0.001
            # minFaceWeight (0 -> 0.5)
            minFaceWeight: 0.05
            # minVolRatio (0 -> 1)
            minVolRatio: 0.01
            # must be >0 for Fluent compatibility
            minTriangleTwist: -1
            # Advanced
            # Number of error distribution iterations
            nSmoothScale: 4
            # Amount to scale back displacement at error points
            errorReduction: 0.75
            # Optional : some meshing phases allow usage of relaxed rules.
            # See e.g. addLayersControls::nRelaxedIter.
            relaxed:
                # Maximum non-orthogonality allowed. Set to 180 to disable.
                maxNonOrtho: 75
        # Merge tolerance. Is fraction of overall bounding box of initial mesh.
        # Note: the write tolerance needs to be higher than this.
        mergeTolerance: 1E-6
    surfaceFeaturesDict:
        FoamFile:
            class: dictionary
            object: surfaceFeaturesDict
            <<: *FoamFile
        surfaces:
            - >
                "innerCylinder.obj"
            - >
                "outerCylinder.obj"
            - >
                "propeller.obj"
        includedAngle: 150
        trimFeatures:
            minElem: 10
---
-
    name: Allrun
    type: [embed, text]
    permission: 777
    data: |
        #!/bin/sh
        cd ${0%/*} || exit 1    # Run from this directory

        # Source tutorial run functions
        . $WM_PROJECT_DIR/bin/tools/RunFunctions

        ./Allmesh

        runApplication decomposePar

        runParallel $(getApplication)

        runApplication reconstructPar
-
    name: Allclean
    type: [embed, text]
    permission: 777
    data: |
        #!/bin/sh
        cd ${0%/*} || exit 1    # Run from this directory

        # Source tutorial clean functions
        . $WM_PROJECT_DIR/bin/tools/CleanFunctions

        # remove surface
        rm -f constant/triSurface/propeller.obj.gz > /dev/null 2>&1

        cleanCase

        rm -rf constant/extendedFeatureEdgeMesh > /dev/null 2>&1
        rm -f constant/triSurface/*.eMesh* > /dev/null 2>&1
-
    name: Allmesh
    type: [embed, text]
    permission: 777
    data: |
        #!/bin/sh
        cd ${0%/*} || exit 1    # Run from this directory

        # Source tutorial run functions
        . $WM_PROJECT_DIR/bin/tools/RunFunctions

        # Copy propeller surface from resources directory
        cp $FOAM_TUTORIALS/resources/geometry/propeller.obj.gz constant/triSurface/

        runApplication blockMesh
        runApplication surfaceFeatures
        runApplication snappyHexMesh -overwrite

        # Create the inlet/outlet and AMI patches
        runApplication createBaffles -overwrite
        runApplication mergeOrSplitBaffles -split -overwrite

        # Renumbering
        runApplication renumberMesh -noFields -overwrite
-
    name: constant/triSurface
    type: [path, 7z]
    permission: null
    data: static/propeller-triSurface.7z
---
pipeline:
    - cp $FOAM_TUTORIALS/resources/geometry/propeller.obj.gz constant/triSurface/
    - blockMesh
    - surfaceFeatures
    - snappyHexMesh -overwrite
    - createBaffles -overwrite
    - mergeOrSplitBaffles -split -overwrite
    - renumberMesh -noFields -overwrite
    - decomposePar
    - __app__
    - reconstructPar
